@model KeytecAdministración.Models.BaseModelo

@{

    var cantidadPaginas = (int)Math.Ceiling((double)Model.TotalDeRegistros / Model.RegistrosPorPagina);
}

<!--Funcionalidad: Anterior y siguiente-->
 

    <ul class="pagination">
        @if (Model.PaginaActual == 1)
        {
            Model.ValoresQueryString["pagina"] = 1;
            <li class="page-item disabled"><span class="page-link">@Html.ActionLink("Anterior", null, Model.ValoresQueryString)</span></li>
        }
        else
        {
            Model.ValoresQueryString["pagina"] = Model.PaginaActual - 1;
            <li>@Html.ActionLink("Anterior", null, Model.ValoresQueryString)</li>
        }

        @if (Model.PaginaActual == cantidadPaginas)
        {
            Model.ValoresQueryString["pagina"] = cantidadPaginas;
            <li page-item disabled style="color:black;">@Html.ActionLink("Siguiente", null, Model.ValoresQueryString)</li>
        }
        else
        {
            Model.ValoresQueryString["pagina"] = Model.PaginaActual + 1;
            <li class="page-item" style="color:black"><span class="page-link"> @Html.ActionLink("Siguiente", null, Model.ValoresQueryString)</span></li>
        }
    </ul>


<!--Funcionalidad: Páginas-->

@{
    int Inicial = 1;
    var radio = 3;
    var cantidadMaximaDePaginas = radio * 2 + 1;
    int Final = (cantidadPaginas > cantidadMaximaDePaginas) ? cantidadMaximaDePaginas : cantidadPaginas;
    if (Model.PaginaActual > radio + 1)
    {
        Inicial = Model.PaginaActual - radio;
        if (cantidadPaginas > Model.PaginaActual + radio)
        {
            Final = Model.PaginaActual + radio;
        }
        else
        {
            Final = cantidadPaginas;
        }
    }
}


<ul class="pagination">
    @{Model.ValoresQueryString["pagina"] = 1; }
    <li><span class="page-link">@Html.ActionLink("Primera", null, Model.ValoresQueryString)</span></li>
    @for (int i = Inicial; i <= Final; i++)
    {
        Model.ValoresQueryString["pagina"] = i;
        if (i == Model.PaginaActual)
        {
            <li class="active"><span class="sr-only">@Html.ActionLink(i.ToString(), null, Model.ValoresQueryString)</span></li>
        }
        else
        {
            <li><span class="page-link">@Html.ActionLink(i.ToString(), null, Model.ValoresQueryString)</span></li>
        }
    }
    @{Model.ValoresQueryString["pagina"] = cantidadPaginas; }
    <li><span class="page-link">@Html.ActionLink("Ultima", null, Model.ValoresQueryString)</span></li>
</ul>
<script src="https://code.jquery.com/jquery-3.4.1.min.js" crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.bundle.min.js" crossorigin="anonymous"></script>
<script src="js/scripts.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.min.js" crossorigin="anonymous"></script>
<script src="assets/demo/chart-area-demo.js"></script>
<script src="wwwroot/assets/demo/chart-bar-demo.js"></script>
<script src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js" crossorigin="anonymous"></script>
<script src="https://cdn.datatables.net/1.10.20/js/dataTables.bootstrap4.min.js" crossorigin="anonymous"></script>
<script src="assets/demo/datatables-demo.js"></script>